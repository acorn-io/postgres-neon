name:        "Neon Postgres"
description: "Acorn providing Neon Serverless Postgres"
readme:      "./README.md"
info:        localData.info
icon:        "./icon.png"

args: {
	// Project name
	projectName: "myproject"

	// AWS region
	region: "aws-us-east-1"

	// Postgres version
	dbVersion: "15"
}

services: neon: generated: job: "create-db"

jobs: "create-db": {
	build: context: "."
	env: {
		ACORN_EXTERNAL_ID: "@{acorn.externalID}"
		NEON_API_KEY:      "secret://neon-creds/api_key"
		PROJECT_NAME:      args.projectName
		REGION:            args.region
		DB_VERSION:        args.dbVersion
	}
	events: ["create"]
}

jobs: "delete-db": {
	build: {
		context: "."
		buildArgs: {
			action: "delete"
		}
	}
	env: {
		ACORN_EXTERNAL_ID: "@{acorn.externalID}"
		NEON_API_KEY:      "secret://neon-creds/api_key"
		PROJECT_NAME:      args.projectName
		CREATED_PROJECT:   "secret://state/created_project"
	}
	events: ["delete"]
}

secrets: {
	user: {
		type: "generated"
		params: job: "create-db"
	}
	state: {
		type: "generated"
		params: job: "create-db"
	}
}

secrets: {
	"neon-creds": {
		type: "credential.neon.tech/api-key"
		params: {
			instructions: localData.credInfo
		}
		data: {
			api_key: ""
		}
	}
}

localData: info: """
	## Usage

	services: db: {
		image: "ghcr.io/acorn-io/neon:v#.#-#"
	}

	containers: app: {
		image: "app-image"
		env: {
		  DB_HOST:  "@{@{service.}db.address}"
		  DB_PORT:  "@{@{service.}db.port.5432}"
		  DB_USER:  "@{@{service.}db.secrets.user.username}"
		  DB_PASS:  "@{@{service.}db.secrets.user.password}"
		}
	}
	"""

localData: credInfo: """
    ## Neon Prostgres Setup Instructions
       	
    To use this service, you need to supply Neon credentials. 
    We will need the *API Private key*
        
    You will need to [create an account](https://neon.tech) 
	
	then follow

	[these instructions](https://neon.tech/docs/manage/api-keys) to create an API key.
    """
